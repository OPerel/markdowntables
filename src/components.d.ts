/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  Table,
} from './types';

export namespace Components {
  interface AppRoot {}
  interface HtmlTable {
    'table': Table;
  }
  interface HtmlTableGenerator {
    'table': Table;
  }
  interface InitGenerator {
    'matrix': { columns: number, rows: number };
  }
  interface MButton {
    'click': () => void;
    'text': string;
  }
  interface TableForm {
    'table': Table;
  }
}

declare global {


  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLHtmlTableElement extends Components.HtmlTable, HTMLStencilElement {}
  var HTMLHtmlTableElement: {
    prototype: HTMLHtmlTableElement;
    new (): HTMLHtmlTableElement;
  };

  interface HTMLHtmlTableGeneratorElement extends Components.HtmlTableGenerator, HTMLStencilElement {}
  var HTMLHtmlTableGeneratorElement: {
    prototype: HTMLHtmlTableGeneratorElement;
    new (): HTMLHtmlTableGeneratorElement;
  };

  interface HTMLInitGeneratorElement extends Components.InitGenerator, HTMLStencilElement {}
  var HTMLInitGeneratorElement: {
    prototype: HTMLInitGeneratorElement;
    new (): HTMLInitGeneratorElement;
  };

  interface HTMLMButtonElement extends Components.MButton, HTMLStencilElement {}
  var HTMLMButtonElement: {
    prototype: HTMLMButtonElement;
    new (): HTMLMButtonElement;
  };

  interface HTMLTableFormElement extends Components.TableForm, HTMLStencilElement {}
  var HTMLTableFormElement: {
    prototype: HTMLTableFormElement;
    new (): HTMLTableFormElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
    'html-table': HTMLHtmlTableElement;
    'html-table-generator': HTMLHtmlTableGeneratorElement;
    'init-generator': HTMLInitGeneratorElement;
    'm-button': HTMLMButtonElement;
    'table-form': HTMLTableFormElement;
  }
}

declare namespace LocalJSX {
  interface AppRoot {}
  interface HtmlTable {
    'table'?: Table;
  }
  interface HtmlTableGenerator {
    'table'?: Table;
  }
  interface InitGenerator {
    'matrix'?: { columns: number, rows: number };
    'onSetMatrix'?: (event: CustomEvent<any>) => void;
  }
  interface MButton {
    'click'?: () => void;
    'text'?: string;
  }
  interface TableForm {
    'onEditTable'?: (event: CustomEvent<any>) => void;
    'table'?: Table;
  }

  interface IntrinsicElements {
    'app-root': AppRoot;
    'html-table': HtmlTable;
    'html-table-generator': HtmlTableGenerator;
    'init-generator': InitGenerator;
    'm-button': MButton;
    'table-form': TableForm;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'app-root': LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
      'html-table': LocalJSX.HtmlTable & JSXBase.HTMLAttributes<HTMLHtmlTableElement>;
      'html-table-generator': LocalJSX.HtmlTableGenerator & JSXBase.HTMLAttributes<HTMLHtmlTableGeneratorElement>;
      'init-generator': LocalJSX.InitGenerator & JSXBase.HTMLAttributes<HTMLInitGeneratorElement>;
      'm-button': LocalJSX.MButton & JSXBase.HTMLAttributes<HTMLMButtonElement>;
      'table-form': LocalJSX.TableForm & JSXBase.HTMLAttributes<HTMLTableFormElement>;
    }
  }
}


